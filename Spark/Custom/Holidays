from datetime import datetime
import calendar

def get_relative_day(year, month, weekday, iteration):
    """
    Get the nth occurrence of a specific weekday in a given month and year.
    
    Args:
        year (int): The year
        month (int): The month (1-12)
        weekday (int): Day of week (0 = Monday, 1 = Tuesday, ..., 6 = Sunday)
        iteration (int): Which occurrence (1 = first, 2 = second, -1 = last, -2 = second-to-last, etc.)
    
    Returns:
        datetime: Date of the specified occurrence
    """
    cal = calendar.Calendar()
    month_days = cal.monthdayscalendar(year, month)
    
    # Get all occurrences of the specified weekday in the month
    days = [week[weekday] for week in month_days if week[weekday] != 0]
    
    # Handle positive and negative iterations
    if iteration > 0:
        # Positive iteration (1st, 2nd, 3rd, etc.)
        if iteration <= len(days):
            return datetime(year, month, days[iteration - 1])
        else:
            raise ValueError(f"There are only {len(days)} {calendar.day_name[weekday]}s in {calendar.month_name[month]} {year}")
    else:
        # Negative iteration (last, second-to-last, etc.)
        if abs(iteration) <= len(days):
            return datetime(year, month, days[iteration])
        else:
            raise ValueError(f"There are only {len(days)} {calendar.day_name[weekday]}s in {calendar.month_name[month]} {year}")

# Example usage:
# Last Monday in May 2025 (weekday 0 = Monday)
print(get_relative_day(2025, 5, 0, -1))  # 2025-05-26

# First Monday in September 2025
print(get_relative_day(2025, 9, 0, 1))   # 2025-09-01



def get_shopping_holidays(year):
    # Thanksgiving date for calculations
    thanksgiving = get_thanksgiving_date(year)
    
    holidays = [
        # Fixed date holidays
        {"name": "New Year's Day", "date": datetime(year, 1, 1)},
        {"name": "Valentine's Day", "date": datetime(year, 2, 14)},
        {"name": "St. Patrick's Day", "date": datetime(year, 3, 17)},
        {"name": "Mother's Day", "date": get_relative_day(year, 5, 6, 2)},  # 2nd Sunday in May
        {"name": "Memorial Day", "date": get_relative_day(year, 5, 0, -1)},  # Last Monday in May
        {"name": "Father's Day", "date": get_relative_day(year, 6, 6, 3)},  # 3rd Sunday in June
        {"name": "Independence Day", "date": datetime(year, 7, 4)},
        {"name": "Labor Day", "date": get_relative_day(year, 9, 0, 1)},  # First Monday in September
        {"name": "Halloween", "date": datetime(year, 10, 31)},
        {"name": "Christmas Eve", "date": datetime(year, 12, 24)},
        {"name": "Christmas Day", "date": datetime(year, 12, 25)},
        {"name": "New Year's Eve", "date": datetime(year, 12, 31)},
        # Variable date holidays
        {"name": "Thanksgiving", "date": thanksgiving},
        {"name": "Black Friday", "date": thanksgiving + timedelta(days=1)}
    ]
    return holidays


